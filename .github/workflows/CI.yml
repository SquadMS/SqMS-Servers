name: CI

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  style:
    name: Check Code Style
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-8.1-composer-${{ hashFiles('composer.json') }}

      - name: Install composer packages
        run: composer install --prefer-dist --no-interaction

      - name: Check Code Style
        run: ./vendor/bin/pint --test

  test:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ 8.1 ]
        experimental: [ false ]
        composer-extra: [ '' ]
        include:
          - php-versions: 8.2
            experimental: true
            composer-extra: '--ignore-platform-req=php+'
    env:
      PHP_VERSION: ${{ matrix.php-versions }}
    name: Test PHP-${{ matrix.php-versions }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer packages
        run: composer install --prefer-dist --no-interaction ${{ matrix.composer-extra }}

      - name: Tests Coverage
        run: vendor/bin/phpunit --coverage-clover=coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: PHP_VERSION
          fail_ci_if_error: true